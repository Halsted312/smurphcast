# ──────────────────────────────────────────────────────────────
#  Publish *SmurphCast* to PyPI whenever a GitHub Release
#  is created (i.e. you click “Publish release” or use
#  `gh release create …`).
# ──────────────────────────────────────────────────────────────
name: Upload Python Package

on:
  release:
    types: [published]      # run only for *published* releases

# Needed once at the top‑level so the build job can checkout
permissions:
  contents: read            # read the repo
  id-token: write           # required for trusted‑publishing

jobs:
# ─────────────────────────────── 1. BUILD  ──────────────────────────────
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build wheel + sdist
        run: |
          python -m pip install --upgrade build
          python -m build          # → ./dist/*.whl  &  dist/*.tar.gz

      - name: Upload dist/ as artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-dists      # artifact name
          path: dist/              # upload *folder*

# ─────────────────────────────── 2. PUBLISH ─────────────────────────────
  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build                  # wait for wheel/sdist
    environment:
      name: pypi                  # (optional) protected env
      url:  https://pypi.org/project/smurphcast
    permissions:
      id-token: write             # **mandatory** in this job
      contents: read

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-dists      # must match upload‑artifacts name
          path: dist/              # place files back in ./dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1   # ← correct tag
        with:
          packages-dir: dist/      # folder created above
          skip-existing: true      # don’t error if version already there
